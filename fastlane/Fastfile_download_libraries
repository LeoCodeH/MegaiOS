
# Custom Lane to download third-party libraries from MEGA and place them inside the iOS project
# The libraries must be hosted on MEGA.
# For example: https://mega.nz/#!#kbZTXIqY!#o8rQAOveVwuVHyvNKLbQ4skSNzHgj5IlHmXVGmKajQw
# The above URL has two components: Key and File. This lane takes them as parameters.
# In the example above, the Key is "kbZTXIqY" and the File is "o8rQAOveVwuVHyvNKLbQ4skSNzHgj5IlHmXVGmKajQw"
# Parameters:
#   - file: The File component from the MEGA URL.
#   - key: The Key component from the MEGA URL.
#   - download_file_path: The directory where the zip will be downloaded.
#   - unzip_path: The directory where the contents of the zip file will be placed.
#   - use_cache: Set to true to use the zip file found in "download_file_path"; otherwise, the file will be downloaded again.
lane :configure_sdk_and_chat_library do |options|
    UI.header "Configure MEGAChat"
    configure_chat_sdk(
      file: options[:file],
      key:  options[:key],
      download_file_path: options[:download_file_path],
      unzip_path: options[:unzip_path],
      use_cache: options[:use_cache]
    )
    UI.success "Successfully configured MEGAChat ✅"
  end

  private_lane :configure_chat_sdk do |options|
    sdk_third_party_path = ENV['SDK_THIRD_PARTY_PATH']
    chat_third_party_path = ENV['CHAT_THIRD_PARTY_PATH']

    file = options[:file].nil? ? ENV['MEGA_URL_DOWNLOAD_THIRD_PARTY_LIBRARIES_FILE'] : options[:file]
    key = options[:key].nil? ? ENV['MEGA_URL_DOWNLOAD_THIRD_PARTY_LIBRARIES_KEY'] : options[:key]

    file_link_url = "https://mega.nz/#!#{file}!#{key}"
    download_file_path = options[:download_file_path].nil? ? "#{ENV['MEGA_LIBRARIES_ZIP_DOWNLOAD_PATH']}#{file}" : options[:download_file_path]
    unzip_path = options[:unzip_path].nil? ? chat_third_party_path : options[:unzip_path]
    use_cache = options[:use_cache].nil? ? false : options[:use_cache]

    download_libraries(
      mega_url: file_link_url,
      destination_folder: download_file_path,
      use_cache: use_cache
    )

    wait_until_folder_is_created(
      folder_path: unzip_path,
      timeout: 120 #seconds
    )

    UI.important "unzip the contents of #{download_file_path} to #{unzip_path}"
    unzip_contents(
      zip_file_path: lane_context[SharedValues::DOWNLOADED_FILE_PATH],
      intermediate_folder_path: File.join(download_file_path, file),
      destination_folder_path: unzip_path,
      use_cache: use_cache
    )
    UI.success "Successfully completed ✅"

    copy_sdk_libraries_to_chat_sdk(
      sdk_third_party_path: sdk_third_party_path,
      chat_third_party_path: chat_third_party_path
    )
  end