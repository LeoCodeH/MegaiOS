public enum RequestTypeEntity: Sendable {
    case unknown
    case login
    case createFolder
    case move
    case copy
    case rename
    case remove
    case share
    case importLink
    case export
    case fetchNodes
    case accountDetails
    case changePassword
    case upload
    case logout
    case getPublicNode
    case getAttrFile
    case setAttrFile
    case getAttrUser
    case setAttrUser
    case retryPendingConnections
    case removeContact
    case createAccount
    case confirmAccount
    case querySignUpLink
    case addSync
    case removeSync
    case disableSync
    case enableSync
    case copySyncConfig
    case copyCachedConfig
    case importSyncConfigs
    case removeSyncs
    case pauseTransfers
    case cancelTransfer
    case cancelTransfers
    case delete
    case reportEvent
    case cancelAttrFile
    case getPricing
    case getPaymentId
    case getUserData
    case loadBalancing
    case killSession
    case submitPurchaseReceipt
    case creditCardStore
    case upgradeAccount
    case creditCardQuerySubscriptions
    case creditCardCancelSubscriptions
    case getSessionTransferUrl
    case getPaymentMethods
    case inviteContact
    case replyContactRequest
    case submitFeedback
    case sendEvent
    case cleanRubbishBin
    case setAttrNode
    case chatCreate
    case chatFetch
    case chatInvite
    case chatRemove
    case chatUrl
    case chatGrantAccess
    case chatRemoveAccess
    case useHttpsOnly
    case setProxy
    case getRecoveryLink
    case queryRecoveryLink
    case confirmRecoveryLink
    case getCancelLink
    case confirmCancelLink
    case getChangeEmailLink
    case confirmChangeEmailLink
    case chatUpdatePermissions
    case chatTruncate
    case chatSetTitle
    case setMaxConnections
    case pauseTransfer
    case moveTransfer
    case chatPresenceUrl
    case registerPushNotification
    case getUserEmail
    case appVersion
    case getLocalSSLCertificate
    case sendSignupLink
    case queryDns
    case queryGelb
    case chatStats
    case downloadFile
    case queryTransferQuota
    case passwordLink
    case getAchievements
    case restore
    case removeVersions
    case chatArchive
    case whyAmIBlocked
    case contactLinkCreate
    case contactLinkQuery
    case contactLinkDelete
    case folderInfo
    case richLink
    case keepMeAlive
    case multiFactorAuthCheck
    case multiFactorAuthGet
    case multiFactorAuthSet
    case addBackup
    case removeBackup
    case timer
    case abortCurrentBackup
    case getPSA
    case fetchTimeZone
    case userAlertAcknowledge
    case chatLinkHandle
    case chatLinkUrl
    case setPrivateMode
    case autojoinPublicChat
    case catchup
    case publicLinkInformation
    case getBackgroundUploadURL
    case completeBackgroundUpload
    case cloudStorageUsed
    case sendSMSVerificationCode
    case checkSMSVerificationCode
    case getCountryCallingCodes
    case verifyCredentials
    case getMiscFlags
    case resendVerificationEmail
    case supportTicket
    case retentionTime
    case resetSmsVerifiedNumber
    case sendDevCommand
    case getBanners
    case dismissBanner
    case backupPut
    case backupRemove
    case backupPutHeartbeat
    case backupInfo
    case getAttrNode
    case loadExternalDriveBackups
    case closeExternalDriveBackups
    case getDownloadUrls
    case startChatCall
    case joinChatCall
    case endChatCall
    case getFAUploadUrl
    case executeOnThread
    case getChatOptions
    case getRecentActions
    case checkRecoveryKey
    case setMyBackups
    case putSet
    case removeSet
    case fetchSet
    case putSetElement
    case removeSetElement
    case removeOldBackupNodes
    case setSyncRunstate
    case addUpdateScheduledMeeting
    case delScheduledMeeting
    case fetchScheduledMeeting
    case fetchScheduledMeetingOccurrences
    case openShareDialog
    case upgradeSecurity
    case putSetElements
    case removeSetElements
    case exportSet
    case exportedSetElement
    case getRecommendedProPlan
    case getNotifications
    case totalOfRequestTypes
}
